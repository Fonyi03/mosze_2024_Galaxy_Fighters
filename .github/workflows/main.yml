name: CI

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
          - os: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'  # Adjust to your target .NET version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

      - name: Code quality check
        run: dotnet format --check  # Or use another linter like StyleCop

      - name: Upload artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: GameBuild-${{ matrix.os }}
          path: ./bin/Release  # Adjust path to your actual build output

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: 'Release ${{ github.sha }}'
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release  # Adjust path to your actual build output
          asset_name: GameBuild-${{ matrix.os }}.zip
          asset_content_type: application/zip
